{"ast":null,"code":"var _jsxFileName = \"/home/morgan/Documents/CODE/Code test/ecommerceclothings/src/components/sign-up/sign-up.component.js\";\nimport React, { useState } from \"react\";\nimport FormInput from \"../form-input/form-input.component\";\nimport CustomButton from \"../custom-button/custom-button.component\";\nimport { auth, createUserProfileDocument } from \"../../firebase/firebase.utils\";\nexport default function SignUp() {\n  const [displayName, setDisplayName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    if (password != confirmPassword) {\n      alert(\"passwords don't match\");\n      return;\n    }\n\n    try {\n      const {\n        user\n      } = await auth.createUserWithEmailAndPassword(email, password);\n      createUserProfileDocument(user, displayName);\n      setConfirmPassword = \"\";\n      setDisplayName = \"\";\n      setEmail = \"\";\n      setConfirmPassword = \"\";\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sign-up\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, \"I do not have an account\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, \"Sign Up with your email and password\"), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"sign-up-form\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    type: \"text\",\n    name: \"DisplayName\",\n    value: displayName,\n    onChange: e => setDisplayName(e.target.value),\n    label: \"Display Name\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"email\",\n    name: \"email\",\n    value: email,\n    onChange: e => setEmail(e.target.value),\n    label: \"Email\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"password\",\n    name: \"password\",\n    value: password,\n    onChange: e => setPassword(e.target.value),\n    label: \"Password\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"password\",\n    name: \"confirmPassword\",\n    value: confirmPassword,\n    onChange: e => setConfirmPassword(e.target.value),\n    label: \"Confirm password\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(CustomButton, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, \" SIGN UP\")));\n}","map":{"version":3,"sources":["/home/morgan/Documents/CODE/Code test/ecommerceclothings/src/components/sign-up/sign-up.component.js"],"names":["React","useState","FormInput","CustomButton","auth","createUserProfileDocument","SignUp","displayName","setDisplayName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","handleSubmit","e","preventDefault","alert","user","createUserWithEmailAndPassword","error","console","log","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport FormInput from \"../form-input/form-input.component\";\nimport CustomButton from \"../custom-button/custom-button.component\";\nimport { auth, createUserProfileDocument } from \"../../firebase/firebase.utils\";\n\nexport default function SignUp() {\n  const [displayName, setDisplayName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (password != confirmPassword) {\n      alert(\"passwords don't match\");\n      return;\n    }\n    try {\n      const { user } = await auth.createUserWithEmailAndPassword(\n        email,\n        password\n      );\n      createUserProfileDocument(user, displayName);\n      setConfirmPassword = \"\";\n      setDisplayName = \"\";\n      setEmail = \"\";\n      setConfirmPassword = \"\";\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <div className=\"sign-up\">\n      <h2 className=\"title\">I do not have an account</h2>\n      <span>Sign Up with your email and password</span>\n      <form className=\"sign-up-form\" onSubmit={handleSubmit}>\n        <FormInput\n          type=\"text\"\n          name=\"DisplayName\"\n          value={displayName}\n          onChange={(e) => setDisplayName(e.target.value)}\n          label=\"Display Name\"\n          required\n        />\n        <FormInput\n          type=\"email\"\n          name=\"email\"\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n          label=\"Email\"\n          required\n        />\n        <FormInput\n          type=\"password\"\n          name=\"password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n          label=\"Password\"\n          required\n        />\n        <FormInput\n          type=\"password\"\n          name=\"confirmPassword\"\n          value={confirmPassword}\n          onChange={(e) => setConfirmPassword(e.target.value)}\n          label=\"Confirm password\"\n          required\n        />\n        <CustomButton type=\"submit\"> SIGN UP</CustomButton>\n      </form>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}