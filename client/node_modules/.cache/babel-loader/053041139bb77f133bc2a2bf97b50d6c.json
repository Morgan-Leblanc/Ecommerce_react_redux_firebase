{"ast":null,"code":"var _jsxFileName = \"/home/morgan/Documents/CODE/Code test/ecommerceclothings/src/screens/shop/shop.component.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Route } from \"react-router-dom\";\nimport CollectionsOverview from \"../../components/collection-overview/collections-overview.component\";\nimport CollectionPage from \"../collection/collection.component\";\nimport { firestore, convertCollectionsSnapshotToMap } from \"../../firebase/firebase.utils\";\nimport WithSpinner from \"../../components/with-spinner/with-spinner.component\";\nconst CollectionOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nconst ShopPage = ({\n  match\n}) => {\n  const [isLoading, setIsLoading] = useState(true);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    const collectionRef = firestore.collection(\"collections\");\n    collectionRef.get().then(snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      dispatch({\n        type: \"SET_DATA_FROM_FIRESTORE\",\n        payload: Object.values(collectionsMap)\n      });\n      setIsLoading(!isLoading);\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"shop-page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: `${match.path}`,\n    render: props => /*#__PURE__*/React.createElement(CollectionOverviewWithSpinner, Object.assign({\n      isLoading: isLoading\n    }, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: `${match.path}/:collectionId`,\n    render: props => /*#__PURE__*/React.createElement(CollectionPageWithSpinner, Object.assign({\n      isLoading: isLoading\n    }, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default ShopPage;","map":{"version":3,"sources":["/home/morgan/Documents/CODE/Code test/ecommerceclothings/src/screens/shop/shop.component.js"],"names":["React","useState","useEffect","useDispatch","Route","CollectionsOverview","CollectionPage","firestore","convertCollectionsSnapshotToMap","WithSpinner","CollectionOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","match","isLoading","setIsLoading","dispatch","collectionRef","collection","get","then","snapshot","collectionsMap","type","payload","Object","values","path","props"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,OAAOC,mBAAP,MAAgC,qEAAhC;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,SACEC,SADF,EAEEC,+BAFF,QAGO,+BAHP;AAKA,OAAOC,WAAP,MAAwB,sDAAxB;AAEA,MAAMC,6BAA6B,GAAGD,WAAW,CAACJ,mBAAD,CAAjD;AACA,MAAMM,yBAAyB,GAAGF,WAAW,CAACH,cAAD,CAA7C;;AAEA,MAAMM,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AAC9B,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4Bd,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAMe,QAAQ,GAAGb,WAAW,EAA5B;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMe,aAAa,GAAGV,SAAS,CAACW,UAAV,CAAqB,aAArB,CAAtB;AACAD,IAAAA,aAAa,CAACE,GAAd,GAAoBC,IAApB,CAA0BC,QAAD,IAAc;AACrC,YAAMC,cAAc,GAAGd,+BAA+B,CAACa,QAAD,CAAtD;AACAL,MAAAA,QAAQ,CAAC;AACPO,QAAAA,IAAI,EAAE,yBADC;AAEPC,QAAAA,OAAO,EAAEC,MAAM,CAACC,MAAP,CAAcJ,cAAd;AAFF,OAAD,CAAR;AAIAP,MAAAA,YAAY,CAAC,CAACD,SAAF,CAAZ;AACD,KAPD;AAQD,GAVQ,EAUN,EAVM,CAAT;AAYA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AACE,IAAA,KAAK,MADP;AAEE,IAAA,IAAI,EAAG,GAAED,KAAK,CAACc,IAAK,EAFtB;AAGE,IAAA,MAAM,EAAGC,KAAD,iBACN,oBAAC,6BAAD;AAA+B,MAAA,SAAS,EAAEd;AAA1C,OAAyDc,KAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAQE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAG,GAAEf,KAAK,CAACc,IAAK,gBADtB;AAEE,IAAA,MAAM,EAAGC,KAAD,iBACN,oBAAC,yBAAD;AAA2B,MAAA,SAAS,EAAEd;AAAtC,OAAqDc,KAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CADF;AAiBD,CAjCD;;AAmCA,eAAehB,QAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Route } from \"react-router-dom\";\nimport CollectionsOverview from \"../../components/collection-overview/collections-overview.component\";\nimport CollectionPage from \"../collection/collection.component\";\nimport {\n  firestore,\n  convertCollectionsSnapshotToMap,\n} from \"../../firebase/firebase.utils\";\n\nimport WithSpinner from \"../../components/with-spinner/with-spinner.component\";\n\nconst CollectionOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nconst ShopPage = ({ match }) => {\n  const [isLoading, setIsLoading] = useState(true);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const collectionRef = firestore.collection(\"collections\");\n    collectionRef.get().then((snapshot) => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      dispatch({\n        type: \"SET_DATA_FROM_FIRESTORE\",\n        payload: Object.values(collectionsMap),\n      });\n      setIsLoading(!isLoading);\n    });\n  }, []);\n\n  return (\n    <div className=\"shop-page\">\n      <Route\n        exact\n        path={`${match.path}`}\n        render={(props) => (\n          <CollectionOverviewWithSpinner isLoading={isLoading} {...props} />\n        )}\n      />\n      <Route\n        path={`${match.path}/:collectionId`}\n        render={(props) => (\n          <CollectionPageWithSpinner isLoading={isLoading} {...props} />\n        )}\n      />\n    </div>\n  );\n};\n\nexport default ShopPage;\n"]},"metadata":{},"sourceType":"module"}