{"ast":null,"code":"var _jsxFileName = \"/home/morgan/Documents/CODE/Code test/ecommerceclothings/src/screens/shop/shop.component.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Route } from \"react-router-dom\";\nimport CollectionsOverview from \"../../components/collection-overview/collections-overview.component\";\nimport CollectionPage from \"../collection/collection.component\";\nimport { firestore, convertCollectionsSnapshotToMap } from \"../../firebase/firebase.utils\";\nimport WithSpinner from \"../../components/with-spinner/with-spinner.component\";\nconst CollectionOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nconst ShopPage = ({\n  match\n}) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    let unsubscribeFromSnapshot = null;\n    const collectionRef = firestore.collection(\"collections\");\n    unsubscribeFromSnapshot = collectionRef.onSnapshot(async snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      dispatch({\n        type: \"SET_DATA_FROM_FIRESTORE\",\n        payload: Object.values(collectionsMap)\n      });\n      setIsLoading(!isLoading);\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"shop-page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: `${match.path}`,\n    component: CollectionsOverview,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: `${match.path}/:collectionId`,\n    component: CollectionPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default ShopPage;","map":{"version":3,"sources":["/home/morgan/Documents/CODE/Code test/ecommerceclothings/src/screens/shop/shop.component.js"],"names":["React","useState","useEffect","useDispatch","Route","CollectionsOverview","CollectionPage","firestore","convertCollectionsSnapshotToMap","WithSpinner","CollectionOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","match","isLoading","setIsLoading","dispatch","unsubscribeFromSnapshot","collectionRef","collection","onSnapshot","snapshot","collectionsMap","type","payload","Object","values","path"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,OAAOC,mBAAP,MAAgC,qEAAhC;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,SACEC,SADF,EAEEC,+BAFF,QAGO,+BAHP;AAKA,OAAOC,WAAP,MAAwB,sDAAxB;AAEA,MAAMC,6BAA6B,GAAGD,WAAW,CAACJ,mBAAD,CAAjD;AACA,MAAMM,yBAAyB,GAAGF,WAAW,CAACH,cAAD,CAA7C;;AAEA,MAAMM,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AAC9B,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4Bd,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAMe,QAAQ,GAAGb,WAAW,EAA5B;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIe,uBAAuB,GAAG,IAA9B;AACA,UAAMC,aAAa,GAAGX,SAAS,CAACY,UAAV,CAAqB,aAArB,CAAtB;AACAF,IAAAA,uBAAuB,GAAGC,aAAa,CAACE,UAAd,CAAyB,MAAOC,QAAP,IAAoB;AACrE,YAAMC,cAAc,GAAGd,+BAA+B,CAACa,QAAD,CAAtD;AACAL,MAAAA,QAAQ,CAAC;AACPO,QAAAA,IAAI,EAAE,yBADC;AAEPC,QAAAA,OAAO,EAAEC,MAAM,CAACC,MAAP,CAAcJ,cAAd;AAFF,OAAD,CAAR;AAIAP,MAAAA,YAAY,CAAC,CAACD,SAAF,CAAZ;AACD,KAPyB,CAA1B;AAQD,GAXQ,EAWN,EAXM,CAAT;AAaA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAG,GAAED,KAAK,CAACc,IAAK,EAAjC;AAAoC,IAAA,SAAS,EAAEtB,mBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAG,GAAEQ,KAAK,CAACc,IAAK,gBAA3B;AAA4C,IAAA,SAAS,EAAErB,cAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD,CAvBD;;AAyBA,eAAeM,QAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Route } from \"react-router-dom\";\nimport CollectionsOverview from \"../../components/collection-overview/collections-overview.component\";\nimport CollectionPage from \"../collection/collection.component\";\nimport {\n  firestore,\n  convertCollectionsSnapshotToMap,\n} from \"../../firebase/firebase.utils\";\n\nimport WithSpinner from \"../../components/with-spinner/with-spinner.component\";\n\nconst CollectionOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nconst ShopPage = ({ match }) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    let unsubscribeFromSnapshot = null;\n    const collectionRef = firestore.collection(\"collections\");\n    unsubscribeFromSnapshot = collectionRef.onSnapshot(async (snapshot) => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      dispatch({\n        type: \"SET_DATA_FROM_FIRESTORE\",\n        payload: Object.values(collectionsMap),\n      });\n      setIsLoading(!isLoading);\n    });\n  }, []);\n\n  return (\n    <div className=\"shop-page\">\n      <Route exact path={`${match.path}`} component={CollectionsOverview} />\n      <Route path={`${match.path}/:collectionId`} component={CollectionPage} />\n    </div>\n  );\n};\n\nexport default ShopPage;\n"]},"metadata":{},"sourceType":"module"}